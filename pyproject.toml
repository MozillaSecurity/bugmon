[build-system]
build-backend = "poetry.masonry.api"
requires = ["poetry>=1.0.8"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover"
]

[tool.coverage.run]
omit = [
  "*/.egg/*",
  "*/.tox/*",
  "*/build/*",
  "*/dist/*",
  "*/setup.py",
  "*/tests/*"
]

[tool.isort]
force_sort_within_sections = false
known_first_party = "bugmon"
profile = "black"

[tool.mypy]
disallow_subclassing_any = "False"
ignore_missing_imports = "True"
implicit_reexport = "True"
strict = "True"

[tool.poetry]
authors = [
  "Christian Holler <choller@mozilla.com>",
  "Jason Kratzer <jkratzer@mozilla.com>"
]
classifiers = [
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.9",
  "Topic :: Security",
  "Topic :: Software Development :: Testing"
]
description = "A python module for analyzing SpiderMonkey and Firefox bugs"
homepage = "https://github.com/MozillaSecurity/bugmon"
keywords = ["bisection", "fuzz", "fuzzing", "security", "test", "testing"]
license = "MPL-2.0"
maintainers = [
  "Mozilla Fuzzing Team <fuzzing@mozilla.com>"
]
name = "bugmon"
packages = [{from = "src", include = "bugmon"}]
readme = "README.md"
repository = "https://github.com/MozillaSecurity/bugmon"
version = "4.2.0"

[tool.poetry.dependencies]
autobisect = "^8.1.0"
bugsy = {git = "https://github.com/AutomatedTester/Bugsy.git"}
fuzzfetch = "^10.0.0"
python = "^3.9.0"
typing-extensions = "^4.2.0"

[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
coverage = "^7.6.8"
flake8 = "^7.1.1"
flake8-isort = "^6.1.1"
flake8-quotes = "^3.3.2"
gitlint = "^0.19.1"
mypy = "^1.7.1"
pre-commit = "^4.0.1"
pylint = "^3.3.2"
pytest = "^8.3.4"
pytest-black = "^0.3.12"
pytest-cov = "^6.0.0"
pytest-mock = "^3.12.0"
pytest-pylint = "^0.21.0"
pytest-recording = "^0.13.2"
python-semantic-release = "^9.19.1"
toml-sort = "^0.24.2"
types-requests = "^2.31.0.10"

[tool.poetry.scripts]
bugmon = "bugmon.main:main"

[tool.pylint.MASTER]
load-plugins = "pylint.extensions.docparams,pylint.extensions.docstyle"

[tool.pylint.format]
max-line-length = 88

[tool.pylint.messages_control]
disable = [
  "fixme",
  "invalid-name",
  "line-too-long",
  "logging-format-interpolation",
  "logging-fstring-interpolation",
  "missing-module-docstring",
  "missing-return-doc",
  "missing-yield-doc",
  "too-few-public-methods",
  "too-many-arguments",
  "too-many-branches",
  "too-many-instance-attributes",
  "too-many-lines",
  "too-many-locals",
  "too-many-nested-blocks",
  "too-many-positional-arguments",
  "too-many-return-statements",
  "too-many-statements",
  "useless-object-inheritance"
]

[tool.pytest.ini_options]
log_level = "DEBUG"

[tool.semantic_release]
build_command = """
  pip install poetry
  poetry build
"""
commit_subject = "chore(release): {version} [skip ci]"
upload_to_pypi = false
upload_to_release = false
version_toml = [
  "pyproject.toml:tool.poetry.version"
]
