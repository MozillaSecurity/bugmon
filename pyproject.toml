[build-system]
build-backend = "poetry.masonry.api"
requires = ["poetry>=1.0.5"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
]

[tool.coverage.run]
omit = [
    "*/setup.py",
    "*/tests/*",
    "*/build/*",
    "*/dist/*",
    "*/.tox/*",
    "*/.egg/*",
]

[tool.isort]
force_sort_within_sections = false
known_first_party = "bugmon"
profile = "black"

[tool.mypy]
disallow_subclassing_any = "False"
exclude = "^.*tests.*$"
ignore_missing_imports = "True"
implicit_reexport = "True"
strict = "True"

[tool.poetry]
authors = [
    "Christian Holler <choller@mozilla.com>",
    "Jason Kratzer <jkratzer@mozilla.com>"
]
classifiers = [
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Testing",
    "Topic :: Security",
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
]
description = "A python module for analyzing SpiderMonkey and Firefox bugs"
homepage = "https://github.com/MozillaSecurity/bugmon"
keywords = ["fuzz", "fuzzing", "security", "test", "testing", "bisection"]
license = "MPL-2.0"
maintainers = [
    "Mozilla Fuzzing Team <fuzzing@mozilla.com>"
]
name = "bugmon"
readme = "README.md"
repository = "https://github.com/MozillaSecurity/bugmon"
version = "1.1.3"

[tool.poetry.dependencies]
autobisect = "^3.1.7"
bugsy = { git = "https://github.com/AutomatedTester/Bugsy.git" }
fuzzfetch = "^2.0.1"
python = "^3.7"

[tool.poetry.dev-dependencies]
black = "^19.10b0"
codecov = "^2.1.11"
flake8 = "^3.8.3"
flake8-isort = "^4.0.0"
flake8-quotes = "^2.1.1"
gitlint = "^0.15.1"
mypy = "v0.902"
pre-commit = "^2.13.0"
pylint = "^2.4.4"
pytest = "^6.2.3"
pytest-black = "^0.3.12"
pytest-cov = "^2.11.1"
pytest-flake8 = "^1.0.7"
pytest-mock = "^3.6.0"
pytest-pylint = "^0.18.0"
python-semantic-release = "^7.16.1"
toml = "^0.10.2"
toml-sort = "^0.19.0"
tox = "^3.14.5"
types-requests = "^2.25.0"

[tool.poetry.scripts]
bugmon = "bugmon.main:main"

[tool.pylint.MASTER]
load-plugins = "pylint.extensions.docparams,pylint.extensions.docstyle"

[tool.pylint.format]
max-line-length = 88

[tool.pylint.messages_control]
disable = [
    "bad-continuation",
    "fixme",
    "invalid-name",
    "line-too-long",
    "logging-format-interpolation",
    "logging-fstring-interpolation",
    "missing-module-docstring",
    "missing-return-doc",
    "missing-yield-doc",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-lines",
    "too-many-locals",
    "too-many-nested-blocks",
    "too-many-return-statements",
    "too-many-statements",
    "useless-object-inheritance"
]

[tool.pytest.ini_options]
log_level = "DEBUG"

[tool.semantic_release]
build_command = "pip install poetry && poetry build"
commit_subject = "chore(release): {version} [skip ci]"
upload_to_pypi = false
upload_to_release = false
version_toml = "pyproject.toml:tool.poetry.version"
